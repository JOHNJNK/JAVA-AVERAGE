/*
A string S is passed as the input. Two words W1 and W2 which are present in the string S are also passed as the input. The program must find the minimum distance D between W1 and W2 in S (in forward or reverse order) and print D as the output.Input Format:The first line will contain S.The second line will contain W1.The third line will contain W2.Output Format:The first line will contain D - the minimum distance between W1 and W2 in S.Boundary Conditions:Length of S is from 5 to 200.

Example Input/Output 1:

Input:the brown quick frog quick thethequick
Output:1
Explanation:quick and the are adjacent as the last two words. Hence distance between them is 1.

Example Input/Output 2:

Input:the quick the brown quick brown the frogquickfrog
Output:3
*/

import java.util.*;
public class Hello {

    public static void main(String[] args) {
		//Your Code Here
		Scanner sc=new Scanner(System.in);
		String a[]=new String[101];
		int n=0;
		while(sc.hasNext()){
		    a[n++]=sc.next();
		}
		String x=a[--n];
		String y=a[--n];
		int p=-99999,q=9999,m=999999;
		for(int i=0;i<n;i++){
		    if(a[i].equals(x)){
		        p=i;
		    }
		    if(a[i].equals(y)){
		        q=i;
		    }
		    if(Math.abs(p-q)<m){
		        m=Math.abs(p-q);
		    }
		}
		if(m==0){
		    System.out.println("1");
		    return;
		}
		System.out.println(m);

	}
}
